{"ast":null,"code":"import _objectSpread from \"/Users/bekirburakaslan/Desktop/GitHub/CMPE492-Graduation-Project-Preregistration-System/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/bekirburakaslan/Desktop/GitHub/CMPE492-Graduation-Project-Preregistration-System/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bekirburakaslan/Desktop/GitHub/CMPE492-Graduation-Project-Preregistration-System/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { getCookie, TOKEN_COOKIE } from \"./utils/cookies.js\";\nvar Configuration = {\n  API_URL: \" http://127.0.0.1:8000/\",\n  STATIC_HOST: \" http://127.0.0.1:8000/\",\n  HTTP_TIMEOUT_MS: 40000\n  /* 40 sec */\n\n};\n\nvar HttpService =\n/*#__PURE__*/\nfunction () {\n  function HttpService() {\n    _classCallCheck(this, HttpService);\n  }\n\n  _createClass(HttpService, [{\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch(_x) {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function (requestOptions) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var url = _this._createUrl(requestOptions);\n\n        var overriddenHeaders = requestOptions.headers || {};\n        var sendToken = requestOptions.sendToken || false;\n\n        var processedRequestOptions = _objectSpread({}, requestOptions, {\n          body: JSON.stringify(requestOptions.body),\n          headers: _objectSpread({\n            \"Content-Type\": \"application/json\",\n            Authorization: typeof sendToken === \"undefined\" ? \"JWT \" + getCookie(TOKEN_COOKIE) : sendToken === false ? null : \"JWT \" + getCookie(TOKEN_COOKIE)\n          }, overriddenHeaders),\n          timeout: Configuration.HTTP_TIMEOUT_MS\n        });\n\n        var fetchStatus = null;\n        fetch(url, processedRequestOptions).then(function (fetchRes) {\n          fetchStatus = fetchRes.status;\n          return fetchRes.json();\n        }).then(function (res) {\n          var response = {\n            status: fetchStatus,\n            responseBody: res\n          };\n          resolve(response);\n        }).catch(function (err) {\n          console.log(\"HttpService.js de hata:\", err);\n          reject({\n            detail: \"Something wrong happened when try to fetch data. Code-API\"\n          });\n        });\n      });\n    })\n  }, {\n    key: \"xhrFormData\",\n    value: function xhrFormData(requestOptions) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var url = _this2._createUrl(requestOptions);\n\n        var sendToken = requestOptions.sendToken || false;\n        var request = new XMLHttpRequest();\n\n        request.onload = function (oEvent) {\n          console.log(oEvent);\n          if (oEvent.target.status === 400) reject(oEvent);else resolve(oEvent);\n        };\n\n        request.open(requestOptions.method, url);\n        request.setRequestHeader(\"Authorization\", typeof sendToken === \"undefined\" ? \"JWT \" + getCookie(TOKEN_COOKIE) : sendToken === false ? null : \"JWT \" + getCookie(TOKEN_COOKIE));\n        request.send(requestOptions.body);\n      });\n    }\n  }, {\n    key: \"_createUrl\",\n    value: function _createUrl(requestOptions) {\n      var url = requestOptions.apiPath || Configuration.API_URL;\n      url = requestOptions.path ? url + requestOptions.path : url;\n      return url;\n    }\n  }]);\n\n  return HttpService;\n}();\n\nexport default new HttpService();","map":{"version":3,"sources":["/Users/bekirburakaslan/Desktop/GitHub/CMPE492-Graduation-Project-Preregistration-System/src/httpService.js"],"names":["getCookie","TOKEN_COOKIE","Configuration","API_URL","STATIC_HOST","HTTP_TIMEOUT_MS","HttpService","requestOptions","Promise","resolve","reject","url","_createUrl","overriddenHeaders","headers","sendToken","processedRequestOptions","body","JSON","stringify","Authorization","timeout","fetchStatus","fetch","then","fetchRes","status","json","res","response","responseBody","catch","err","console","log","detail","request","XMLHttpRequest","onload","oEvent","target","open","method","setRequestHeader","send","apiPath","path"],"mappings":"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","sourcesContent":["import { getCookie, TOKEN_COOKIE } from \"./utils/cookies.js\";\n\nconst Configuration = {\n  API_URL: \" http://127.0.0.1:8000/\",\n  STATIC_HOST: \" http://127.0.0.1:8000/\",\n  HTTP_TIMEOUT_MS: 40000 /* 40 sec */\n};\n\nclass HttpService {\n  fetch(requestOptions) {\n    return new Promise((resolve, reject) => {\n      const url = this._createUrl(requestOptions);\n      const overriddenHeaders = requestOptions.headers || {};\n      const sendToken = requestOptions.sendToken || false;\n      const processedRequestOptions = {\n        ...requestOptions,\n        body: JSON.stringify(requestOptions.body),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization:\n            typeof sendToken === \"undefined\"\n              ? \"JWT \" + getCookie(TOKEN_COOKIE)\n              : sendToken === false\n              ? null\n              : \"JWT \" + getCookie(TOKEN_COOKIE),\n          ...overriddenHeaders\n        },\n        timeout: Configuration.HTTP_TIMEOUT_MS\n      };\n\n      let fetchStatus = null;\n\n      fetch(url, processedRequestOptions)\n        .then(fetchRes => {\n          fetchStatus = fetchRes.status;\n          return fetchRes.json();\n        })\n        .then(res => {\n          const response = {\n            status: fetchStatus,\n            responseBody: res\n          };\n          resolve(response);\n        })\n        .catch(err => {\n          console.log(\"HttpService.js de hata:\", err);\n          reject({\n            detail: \"Something wrong happened when try to fetch data. Code-API\"\n          });\n        });\n    });\n  }\n\n  xhrFormData(requestOptions) {\n    return new Promise((resolve, reject) => {\n      const url = this._createUrl(requestOptions);\n      const sendToken = requestOptions.sendToken || false;\n\n      var request = new XMLHttpRequest();\n      request.onload = oEvent => {\n        console.log(oEvent);\n        if (oEvent.target.status === 400) reject(oEvent);\n        else resolve(oEvent);\n      };\n\n      request.open(requestOptions.method, url);\n      request.setRequestHeader(\n        \"Authorization\",\n        typeof sendToken === \"undefined\"\n          ? \"JWT \" + getCookie(TOKEN_COOKIE)\n          : sendToken === false\n          ? null\n          : \"JWT \" + getCookie(TOKEN_COOKIE)\n      );\n      request.send(requestOptions.body);\n    });\n  }\n\n  _createUrl(requestOptions) {\n    let url = requestOptions.apiPath || Configuration.API_URL;\n    url = requestOptions.path ? url + requestOptions.path : url;\n    return url;\n  }\n}\n\nexport default new HttpService();\n"]},"metadata":{},"sourceType":"module"}